/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MintableToken,
  MintableTokenInterface,
} from "../../contracts/MintableToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca8380380610ca883398101604081905261002f91610290565b8181600361003d8382610382565b50600461004a8282610382565b5050506100673369d3c21bcecceda100000061006e60201b60201c565b5050610467565b6001600160a01b03821661009d5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6100a9600083836100ad565b5050565b6001600160a01b0383166100d85780600260008282546100cd9190610440565b9091555061014a9050565b6001600160a01b0383166000908152602081905260409020548181101561012b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610094565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661016657600280548290039055610185565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101ca91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126101fe57600080fd5b81516001600160401b03811115610217576102176101d7565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610245576102456101d7565b60405281815283820160200185101561025d57600080fd5b60005b8281101561027c57602081860181015183830182015201610260565b506000918101602001919091529392505050565b600080604083850312156102a357600080fd5b82516001600160401b038111156102b957600080fd5b6102c5858286016101ed565b602085015190935090506001600160401b038111156102e357600080fd5b6102ef858286016101ed565b9150509250929050565b600181811c9082168061030d57607f821691505b60208210810361032d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037d57806000526020600020601f840160051c8101602085101561035a5750805b601f840160051c820191505b8181101561037a5760008155600101610366565b50505b505050565b81516001600160401b0381111561039b5761039b6101d7565b6103af816103a984546102f9565b84610333565b6020601f8211600181146103e357600083156103cb5750848201515b600019600385901b1c1916600184901b17845561037a565b600084815260208120601f198516915b8281101561041357878501518255602094850194600190920191016103f3565b50848210156104315786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561046157634e487b7160e01b600052601160045260246000fd5b92915050565b610832806104766000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461014357806370a082311461015657806379cc67901461017f57806395d89b4114610192578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f57806340c10f191461012e575b600080fd5b6100c16101e6565b6040516100ce9190610662565b60405180910390f35b6100ea6100e53660046106cc565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046106f6565b610292565b604051601281526020016100ce565b61014161013c3660046106cc565b6102b6565b005b610141610151366004610733565b6102c4565b6100fe61016436600461074c565b6001600160a01b031660009081526020819052604090205490565b61014161018d3660046106cc565b6102d1565b6100c16102e6565b6100ea6101a83660046106cc565b6102f5565b6100fe6101bb36600461076e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f5906107a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610221906107a1565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b600033610286818585610303565b60019150505b92915050565b6000336102a0858285610315565b6102ab858585610398565b506001949350505050565b6102c082826103f7565b5050565b6102ce338261042d565b50565b6102dc823383610315565b6102c0828261042d565b6060600480546101f5906107a1565b600033610286818585610398565b6103108383836001610463565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610392578181101561038357604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61039284848484036000610463565b50505050565b6001600160a01b0383166103c257604051634b637e8f60e11b81526000600482015260240161037a565b6001600160a01b0382166103ec5760405163ec442f0560e01b81526000600482015260240161037a565b610310838383610538565b6001600160a01b0382166104215760405163ec442f0560e01b81526000600482015260240161037a565b6102c060008383610538565b6001600160a01b03821661045757604051634b637e8f60e11b81526000600482015260240161037a565b6102c082600083610538565b6001600160a01b03841661048d5760405163e602df0560e01b81526000600482015260240161037a565b6001600160a01b0383166104b757604051634a1406b160e11b81526000600482015260240161037a565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561039257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161052a91815260200190565b60405180910390a350505050565b6001600160a01b03831661056357806002600082825461055891906107db565b909155506105d59050565b6001600160a01b038316600090815260208190526040902054818110156105b65760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161037a565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105f157600280548290039055610610565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161065591815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156106905760208186018101516040868401015201610673565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106c757600080fd5b919050565b600080604083850312156106df57600080fd5b6106e8836106b0565b946020939093013593505050565b60008060006060848603121561070b57600080fd5b610714846106b0565b9250610722602085016106b0565b929592945050506040919091013590565b60006020828403121561074557600080fd5b5035919050565b60006020828403121561075e57600080fd5b610767826106b0565b9392505050565b6000806040838503121561078157600080fd5b61078a836106b0565b9150610798602084016106b0565b90509250929050565b600181811c908216806107b557607f821691505b6020821081036107d557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561028c57634e487b7160e01b600052601160045260246000fdfea264697066735822122085223881ab920913052c68a9fe4d59e9afe0c2851bfc095494dccaa109c4be6f64736f6c634300081b0033";

type MintableTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintableTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintableToken__factory extends ContractFactory {
  constructor(...args: MintableTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      MintableToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintableToken__factory {
    return super.connect(runner) as MintableToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintableTokenInterface {
    return new Interface(_abi) as MintableTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintableToken {
    return new Contract(address, _abi, runner) as unknown as MintableToken;
  }
}
