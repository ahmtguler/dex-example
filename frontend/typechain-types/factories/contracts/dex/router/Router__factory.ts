/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Router,
  RouterInterface,
} from "../../../../contracts/dex/router/Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPool",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "contract IFeeManager",
        name: "_feeManager",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_TVER",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_THB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "THB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TVER",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountTVERDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTHBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTVERMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTHBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeManager",
    outputs: [
      {
        internalType: "contract IFeeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTVERMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountTHBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "direction",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516111583803806111588339810160408190526100309161006f565b60016000556001600160a01b0393841660805291831660a052821660c0521660e0526100ce565b6001600160a01b038116811461006c57600080fd5b50565b6000806000806080858703121561008557600080fd5b845161009081610057565b60208601519094506100a181610057565b60408601519093506100b281610057565b60608601519092506100c381610057565b939692955090935050565b60805160a05160c05160e05161101b61013d6000396000818160df0152818161039a015261064201526000818161012d015281816102c7015261060d015260008181610106015261093b0152600081816087015281816101ab0152818161046f0152610778015261101b6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d0fb02031161005b578063d0fb020314610101578063dd6a16b414610128578063ded998b91461014f578063ed856cdc1461016257600080fd5b806316f0115b1461008257806325ccf9b3146100c55780634af21616146100da575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100d86100d3366004610caa565b610175565b005b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100d861015d366004610d00565b610442565b6100d8610170366004610d53565b6106ef565b61017d6108c0565b80428110156101a75760405162461bcd60e51b815260040161019e90610d89565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000009050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa15801561020c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102309190610dc0565b91509150600089116102545760405162461bcd60e51b815260040161019e90610de4565b6000821180156102645750600081115b6102805760405162461bcd60e51b815260040161019e90610e1b565b8660ff1660000361035e5760006102988a84846108ea565b9050888110156102ba5760405162461bcd60e51b815260040161019e90610e52565b6102ef6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633868d610a20565b6040516336cd320560e11b815260006004820152602481018290526001600160a01b038881166044830152851690636d9a640a90606401600060405180830381600087803b15801561034057600080fd5b505af1158015610354573d6000803e3d6000fd5b505050505061042d565b600061036b8a83856108ea565b90508881101561038d5760405162461bcd60e51b815260040161019e90610e52565b6103c26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633868d610a20565b6040516336cd320560e11b815260048101829052600060248201526001600160a01b038881166044830152851690636d9a640a90606401600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b50505050505b5050505061043b6001600055565b5050505050565b61044a6108c0565b804281101561046b5760405162461bcd60e51b815260040161019e90610d89565b60007f00000000000000000000000000000000000000000000000000000000000000009050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f49190610dc0565b91509150600080836000148015610509575082155b1561051857508a905089610600565b60006105258c8587610a80565b90508c8111610589578a81101561057e5760405162461bcd60e51b815260206004820181905260248201527f526f757465723a20696e73756666696369656e74205456455220616d6f756e74604482015260640161019e565b8092508b91506105fe565b60006105968e8787610a80565b90508c8111156105a8576105a8610e94565b8a8110156105f85760405162461bcd60e51b815260206004820152601f60248201527f526f757465723a20696e73756666696369656e742054484220616d6f756e7400604482015260640161019e565b8d935091505b505b6106356001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338785610a20565b61066a6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338784610a20565b6040516335313c2160e11b81526001600160a01b038981166004830152861690636a627842906024016020604051808303816000875af11580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190610eaa565b505050505050506106e76001600055565b505050505050565b6106f76108c0565b80428110156107185760405162461bcd60e51b815260040161019e90610d89565b600086116107765760405162461bcd60e51b815260206004820152602560248201527f526f757465723a20696e73756666696369656e74206c697175696469747920616044820152641b5bdd5b9d60da1b606482015260840161019e565b7f00000000000000000000000000000000000000000000000000000000000000006107ac6001600160a01b03821633838a610a20565b60405163226bf2d160e21b81526001600160a01b03858116600483015260009182918416906389afcb449060240160408051808303816000875af11580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c9190610dc0565b91509150878210156108705760405162461bcd60e51b815260206004820181905260248201527f526f757465723a20696e73756666696369656e74205456455220616d6f756e74604482015260640161019e565b8681101561042d5760405162461bcd60e51b815260206004820152601f60248201527f526f757465723a20696e73756666696369656e742054484220616d6f756e7400604482015260640161019e565b6002600054036108e357604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b600080841161090b5760405162461bcd60e51b815260040161019e90610de4565b60008311801561091b5750600082115b6109375760405162461bcd60e51b815260040161019e90610e1b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663db8d55f16040518163ffffffff1660e01b8152600401606060405180830381865afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610ed5565b925050506000816127106109cf9190610f2e565b6109dd9061ffff1687610f48565b905060006109eb8583610f48565b90506000826109fc88612710610f48565b610a069190610f5f565b9050610a128183610f72565b9450505050505b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610a7a908590610aed565b50505050565b6000808411610aa15760405162461bcd60e51b815260040161019e90610de4565b600083118015610ab15750600082115b610acd5760405162461bcd60e51b815260040161019e90610e1b565b600083610ada8487610f48565b610ae49190610f72565b95945050505050565b6000610b026001600160a01b03841683610b55565b90508051600014158015610b27575080806020019051810190610b259190610f94565b155b15610b5057604051635274afe760e01b81526001600160a01b038416600482015260240161019e565b505050565b6060610b6383836000610b6c565b90505b92915050565b606081471015610b915760405163cd78605960e01b815230600482015260240161019e565b600080856001600160a01b03168486604051610bad9190610fb6565b60006040518083038185875af1925050503d8060008114610bea576040519150601f19603f3d011682016040523d82523d6000602084013e610bef565b606091505b5091509150610bff868383610c09565b9695505050505050565b606082610c1e57610c1982610c65565b610a19565b8151158015610c3557506001600160a01b0384163b155b15610c5e57604051639996b31560e01b81526001600160a01b038516600482015260240161019e565b5080610a19565b805115610c755780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114610ca557600080fd5b919050565b600080600080600060a08688031215610cc257600080fd5b8535945060208601359350604086013560ff81168114610ce157600080fd5b9250610cef60608701610c8e565b949793965091946080013592915050565b60008060008060008060c08789031215610d1957600080fd5b86359550602087013594506040870135935060608701359250610d3e60808801610c8e565b9598949750929591949360a090920135925050565b600080600080600060a08688031215610d6b57600080fd5b853594506020860135935060408601359250610cef60608701610c8e565b60208082526018908201527f526f757465723a206578706972656420646561646c696e650000000000000000604082015260600190565b60008060408385031215610dd357600080fd5b505080516020909101519092909150565b6020808252601b908201527f526f757465723a20696e73756666696369656e7420616d6f756e740000000000604082015260600190565b6020808252601e908201527f526f757465723a20696e73756666696369656e74206c69717569646974790000604082015260600190565b60208082526022908201527f526f757465723a20696e73756666696369656e74206f757470757420616d6f756040820152611b9d60f21b606082015260800190565b634e487b7160e01b600052600160045260246000fd5b600060208284031215610ebc57600080fd5b5051919050565b805161ffff81168114610ca557600080fd5b600080600060608486031215610eea57600080fd5b610ef384610ec3565b9250610f0160208501610ec3565b9150610f0f60408501610ec3565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b61ffff8281168282160390811115610b6657610b66610f18565b8082028115828204841417610b6657610b66610f18565b80820180821115610b6657610b66610f18565b600082610f8f57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610fa657600080fd5b81518015158114610a1957600080fd5b6000825160005b81811015610fd75760208186018101518583015201610fbd565b50600092019182525091905056fea2646970667358221220bde20401a29a2993849437284685c43c0d4656d3df11484dc574cb060e0bd5e464736f6c634300081b0033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pool: AddressLike,
    _feeManager: AddressLike,
    _TVER: AddressLike,
    _THB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _pool,
      _feeManager,
      _TVER,
      _THB,
      overrides || {}
    );
  }
  override deploy(
    _pool: AddressLike,
    _feeManager: AddressLike,
    _TVER: AddressLike,
    _THB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _pool,
      _feeManager,
      _TVER,
      _THB,
      overrides || {}
    ) as Promise<
      Router & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Router__factory {
    return super.connect(runner) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new Interface(_abi) as RouterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Router {
    return new Contract(address, _abi, runner) as unknown as Router;
  }
}
